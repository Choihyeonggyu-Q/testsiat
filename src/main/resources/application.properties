# spring.application.name=testsiat

server.port=8088

spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

# hicari cp
# DB property Setting 
# spring.datasource.hikari.driver-class-name=
# spring.datasource.hikari.jdbc-url=
# spring.datasource.hikari.username=
# spring.datasource.hikari.password=

# 히카리 커넥션 풀과 관계없이 다른 커넥션 풀을 사용하고자 할때
# DB property Setting 
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@localhost:1521/xe
spring.datasource.username=hr
spring.datasource.password=hr

# mybatis
mybatis.config-location=classpath:/mybatis-config.xml
mybatis.mapper-locations=/mappers/**/*Mapper.xml
# /**/ -> directory로 또 관리할 수도 있으니 이렇게 명세한다

# Jpa
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.OracleDialect
# auto type : create, none, update  -> 잘안씀
spring.jpa.hibernate.ddl-auto=none
# console output
spring.jpa.properties.hibernate.show_sql=true
# 가독성 있는 포맷형식
spring.jpa.properties.hibernate.format_sql=true
# 디버깅이 용이하도록 추가정보 출력
spring.jpa.properties.hibernate.use_sql_comments=true